  (1:0-6) before;                 <--    (3:2-8)   before;
          ^^^^^^                                   ^^^^^^

  (1:6-7) fore;                   <--    (3:8-9) fore;
              ^                                      ^

  (2:0-6) using x =               <--    (4:2-6)   var x = 
          ^^^^^^                                   ^^^^

  (2:6-7) ing x = f               <--    (4:6-7) var x = b
              ^                                      ^

 (2:7-10) ng x = fn()             <--   (4:7-10) ar x = babe
              ^^^                                    ^^^

 (2:7-10) ng x = fn()             <--  (4:10-22) x = babelHelpers.usi
              ^^^                                    ^^^^^^^^^^^^

 (2:7-10) ng x = fn()             <--  (4:22-23) pers.usin
              ^^^                                    ^

 (2:7-10) ng x = fn()             <--  (4:23-28) ers.using(_st
              ^^^                                    ^^^^^

 (2:7-10) ng x = fn()             <--  (4:28-29) sing(_sta
              ^^^                                    ^

 (2:7-10) ng x = fn()             <--  (4:29-35) ing(_stack, fn
              ^^^                                    ^^^^^^

 (2:7-10) ng x = fn()             <--  (4:35-37) tack, fn()
              ^^^                                    ^^

(2:10-12) x = fn();               <--  (4:37-39) ck, fn());
              ^^                                     ^^

(2:12-13) = fn();                 <--  (4:39-40) , fn());
              ^                                      ^

(2:13-14)  fn();                  <--  (4:40-41)  fn());
              ^                                      ^

(2:14-15) fn();                   <--  (4:41-43) fn());
              ^                                      ^^

 (3:0-15) doSomethingWith(x);     <--   (5:2-17)   doSomethingWith(x);
          ^^^^^^^^^^^^^^^                          ^^^^^^^^^^^^^^^

(3:15-16) With(x);                <--  (5:17-18) With(x);
              ^                                      ^

(3:16-17) ith(x);                 <--  (5:18-19) ith(x);
              ^                                      ^

(3:17-18) th(x);                  <--  (5:19-20) th(x);
              ^                                      ^

(3:18-19) h(x);                   <--  (5:20-21) h(x);
              ^                                      ^

  (4:0-5) after;                  <--    (6:2-7)   after;
          ^^^^^                                    ^^^^^

  (4:5-6) fter;                   <--    (6:7-8) fter;
              ^                                      ^

  (4:6-6) ter;                    <--    (7:0-9) } catch (_) {
             ><                                  ^^^^^^^^^

  (4:6-6) ter;                    <--   (7:9-10) ch (_) {
             ><                                      ^

  (4:6-6) ter;                    <--  (7:10-13) h (_) {
             ><                                      ^^^

  (4:6-6) ter;                    <--    (8:2-6)   var _err
             ><                                    ^^^^

  (4:6-6) ter;                    <--   (8:6-12) var _error = _
             ><                                      ^^^^^^

  (4:6-6) ter;                    <--  (8:12-15) rror = _;
             ><                                      ^^^

  (4:6-6) ter;                    <--  (8:15-16) r = _;
             ><                                      ^

  (4:6-6) ter;                    <--  (8:16-17)  = _;
             ><                                      ^

  (4:6-6) ter;                    <--    (9:2-6)   var _has
             ><                                    ^^^^

  (4:6-6) ter;                    <--   (9:6-15) var _hasError = t
             ><                                      ^^^^^^^^^

  (4:6-6) ter;                    <--  (9:15-23) rror = true;
             ><                                      ^^^^^^^^

  (4:6-6) ter;                    <--  (10:0-11) } finally {
             ><                                  ^^^^^^^^^^^

  (4:6-6) ter;                    <--  (11:2-14)   babelHelpers.dis
             ><                                    ^^^^^^^^^^^^

  (4:6-6) ter;                    <--  (11:14-15) pers.disp
             ><                                       ^

  (4:6-6) ter;                    <--  (11:15-22) ers.dispose(_st
             ><                                       ^^^^^^^

  (4:6-6) ter;                    <--  (11:22-23) pose(_sta
             ><                                       ^

  (4:6-6) ter;                    <--  (11:23-29) ose(_stack, _e
             ><                                       ^^^^^^

  (4:6-6) ter;                    <--  (11:29-31) tack, _err
             ><                                       ^^

  (4:6-6) ter;                    <--  (11:31-37) ck, _error, _h
             ><                                       ^^^^^^

  (4:6-6) ter;                    <--  (11:37-39) rror, _has
             ><                                       ^^

  (4:6-6) ter;                    <--  (11:39-48) or, _hasError);
             ><                                       ^^^^^^^^^

  (4:6-6) ter;                    <--  (11:48-50) rror);
             ><                                       ^^

  (4:6-6) ter;                    <--   (12:0-1) }
             ><                                  ^
