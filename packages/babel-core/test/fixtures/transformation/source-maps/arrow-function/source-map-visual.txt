  (1:0-4) var t =                 <--    (1:0-4) var t = 
          ^^^^                                   ^^^^

  (1:4-5) var t = x               <--    (1:4-5) var t = f
              ^                                      ^

  (1:5-8) ar t = x =>             <--    (1:5-8) ar t = func
              ^^^                                    ^^^

  (1:8-8) t = x =>                <--   (1:8-17) t = function t(x)
             ><                                      ^^^^^^^^^

  (1:4-5) var t = x               <--  (1:17-18) ion t(x) 
              ^                                      ^

  (1:5-8) ar t = x =>             <--  (1:18-19) on t(x) {
              ^^^                                    ^

  (1:8-9) t = x =>                <--  (1:19-20) n t(x) {
              ^                                      ^

 (1:9-13)  = x => x *             <--  (1:20-23)  t(x) {
              ^^^^                                   ^^^

 (1:9-13)  = x => x *             <--    (2:2-9)   return x * 
              ^^^^                                 ^^^^^^^

(1:13-14)  => x * x               <--   (2:9-10) urn x * x
              ^                                      ^

(1:14-17) => x * x;               <--  (2:10-13) rn x * x;
              ^^^                                    ^^^

(1:17-18) x * x;                  <--  (2:13-14) x * x;
              ^                                      ^

(1:18-19)  * x;                   <--  (2:14-15)  * x;
              ^                                      ^

(1:18-19)  * x;                   <--    (3:0-2) };
              ^                                  ^^
